; PlatformIO Project Configuration File. Use this file to configure project metadata, build targets and frameworks.

; teensy target specification. Should work for any teensy board, not just 4.1. This the main target of the project as
; this is what is actively sued in our lab. As such, this is the most well-researched platform of the 3 tested
; platforms.
[env:teensy41]
platform = teensy
board = teensy41
framework = arduino
monitor_speed = 115200
test_framework = unity
lib_deps = 
	arminjo/digitalWriteFast@^1.2.0
	pfeerick/elapsedMillis@^1.0.6

; due target specification. Due boards are somewhat unique as they come both with native USB and programming port. The
; library is tested on the Programming port, but much better real-world performance would be achieved when it is used
; with the USB port (USBSerial instead of Serial is used as the 'Stream' input for the main class).
[env:due]
platform = atmelsam
board = due
framework = arduino
monitor_speed = 5250000
test_framework = unity
build_flags = -std=c++17
lib_deps =
    arminjo/digitalWriteFast@^1.2.0
    pfeerick/elapsedMillis@^1.0.6

; mega uses the same architecture as other AVR boards, but has more memory and was immediately available for testing as
; the author had spare boards. This library has been tested on a borrowed uno to verify its' compatibility, and it will,
; by extension, work on nano. That said, the library as-shipped is probably not the best solution for the
; memory-constrained boards and will benefit from optimizations like choosing an 8-bit CRC and reducing the size of the
; class buffers from 254 bytes each to a lower value. Please see our GitHub page example for more details.
[env:mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
monitor_speed = 1000000
test_framework = unity
build_flags = -std=c++17
lib_deps =
    arminjo/digitalWriteFast@^1.2.0
    pfeerick/elapsedMillis@^1.0.6
